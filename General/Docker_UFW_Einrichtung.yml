---
- hosts: vps
  become: true
  tasks:
    - name: install ufw
      apt: name={{ item }} state=present update_cache=yes
      with_items:
        - ufw

    - name: configure ufw defaults
      ufw: direction={{ item.direction }} policy={{ item.policy }}
      with_items:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
      notify:
        - restart ufw

    - name: configure ufw ports
      ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
      with_items:
        - { rule: 'allow', port: '1270', proto: 'tcp' }
        - { rule: 'allow', port: '80', proto: 'tcp' }
        - { rule: 'allow', port: '443', proto: 'tcp' }
        
      notify:
        - restart ufw

    # You should install Docker before this rule.
    - name: configure ufw before.init to remove existing rules
      blockinfile:
        path: /etc/ufw/before.init
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        insertafter: stop\)
        block: |
          iptables -F DOCKER-USER || true
          iptables -A DOCKER-USER -j RETURN || true
          iptables -X ufw-user-input || true

    - name: chmod /etc/ufw/before.init
      file:
        path: /etc/ufw/before.init
        state: touch
        mode: "a+x"

    - name: configure ufw to work with DOCKER-USER chain name
      blockinfile:
        path: /etc/ufw/after.rules
        marker: "# {mark} ANSIBLE MANAGED BLOCK (docker-user)"
        block: |
          *filter
          :DOCKER-USER - [0:0]
          :ufw-user-input - [0:0]
          :ufw-after-logging-forward - [0:0]

          -A DOCKER-USER -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
          -A DOCKER-USER -m conntrack --ctstate INVALID -j DROP
          -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-user-input
          -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j ufw-after-logging-forward
          -A DOCKER-USER -i {{ ansible_default_ipv4.interface }} -j DROP

          COMMIT

    # Optional
    #- name: configure ufw ports for docker swarm (TCP)
    #  ufw: rule=allow src={{ hostvars[item]['ansible_default_ipv4']['address'] }} port=2377,7946 proto=tcp
    #  with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
    #  notify: restart ufw

    # Optional
    #- name: configure ufw ports for docker swarm (UDP)
    #  ufw: rule=allow src={{ hostvars[item]['ansible_default_ipv4']['address'] }} port=4789,7946 proto=udp
    #  with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
    #  notify: restart ufw
    # TEST

  handlers:
    - name: restart ufw
      service: name=ufw state=restarted enabled=yes
      
